/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    container = "library://vahiniaina/waterisk/waterisk:0.0.1"
    cpus = params.default_cpus
    memory = params.default_cpus

    withName: ASSEMBLE_GENOME {
        container = "docker://quay.io/gbouras13/hybracter:0.11.0"
        publishDir = [
            path: { "${params.output_dir}hybracter/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "BUSCO" {
        container  = "library://vahiniaina/waterisk/busco:0.0.1"
        publishDir = [
            path: { "${params.output_dir}busco/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: "ABRICATE_PLASMID" {
        publishDir = [
            path : { "${params.output_dir}final_output/" }
            mode: params.publish_dir_mode,
        ]
    }

    withName: "DBSCAN_CHROMOSOME" {
        publishDir = "${params.output_dir}dbscan/"
        mode: params.publish_dir_mode,
    }

    withName: "FILTER_CIRCULAR_PLASMID" {
        publishDir = [
            path: { "${params.output_dir}hybracter/" }
            mode: params.publish_dir_mode,
        ]
    }

    withName: "KRAKEN" {
        publishDir = [
            path: { "${params.output_dir}kraken/" }
            mode: params.publish_dir_mode,
        ]
    }

    withName: "VF_BLAST" {
        publishDir = [
            path: { "${params.output_dir}vf_blast/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: "MERGE_TYPE" {
        publishDir = [
            path: { "${params.output_dir}plasmid_annotation/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: 'plasme' {
        container = "library://vahiniaina/waterisk/plasme:0.0.1"
        publishDir = [
            path: { "${params.output_dir}plasme_output/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: 'mob' {
        container =  "library://vahiniaina/waterisk/mob_suite:0.0.1"
        publishDir = [
            path: { "${params.output_dir}plasmid_annotation/"}
            mode: params.publish_dir_mode,
        ]
    }

    //integron_finder from pasteur container is not suitable with nextflow
    withLabel: 'integron_finder' {
        container = "library://vahiniaina/waterisk/integron_finder:0.0.1"
        publishDir = [
            path: { "${params.output_dir}intergron_finder/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: 'amrfinder' {
        container = "docker://ncbi/amr:latest"
        publishDir = [
            path: { "${params.output_dir}final_output/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: 'rgi' {
        container = "docker://quay.io/biocontainers/rgi:6.0.3--pyha8f3691_0"
        publishDir = [
            path: { "${params.output_dir}final_output/" }
            mode: params.publish_dir_mode,
        ]
    }

    withLabel: 'tnfinder' {
        container = "library://vahiniaina/waterisk/tnfinder:0.0.1"
        publishDir = [
            path: { "${params.output_dir}tnfinder/" }
            mode: params.publish_dir_mode,
        ]
    }   
}